Transcript
Next, let's focus on Components again.

And for that, still

in that same project still in the app component.

If we take a look at this JSX code in there, we can see that

in that root component, we got a lot of things going on.

A lot of different responsibilities in the end

because this app component is actually responsible

for rendering this core concepts section here

and all these core concept items.

And it's also responsible for managing these tap buttons

and this interactive part at the bottom of the screen here.

All these things are in the end managed

by this app component, and that's why this

app component manages both this state here

for this interactive area

and also has to import this core concept data

from the data js file.

Now of course, for this basic app

that's not necessarily a problem

but having a single component that deals

with such different things typically is a sign

that you might want to split it

up and break it up into multiple smaller sub Components.

And in this app specifically here, there also

is another sign because you might've noticed that

if I click one of these tap buttons occasionally this text

up here changes.

So as I click this here, you see it changes to fundamental

and then here to crucial and so on.

And this happens because we're managing this state.

This selected topic state in the app component.

And as you learned in the previous section, whenever

this state is updated with help of this

state updating function here, the component function

to which this state belongs is re-executed,

sp that React is able to find out if something changed

about this JSX code and is able to update the screen.

But since this header component here is of course being used

in this app component, this header component function here

is also re-executed.

Because this entire code here

in the app component is re-executed when the

app component function is executed again.

And therefore, of course, the header component function

is also called again.

And in there, and therefore generating a new random number

every time this is drawn again.

And I'm updating this text here.

And this is another signal

that maybe we're managing the state,

this selected topic state here,

in the wrong component and that we

might wanna split up this app component

and that's therefore what we'll do next.

Because being able to identify good

places for extra Components and being able to split

up your big Components into smaller Components

and to separate responsibilities is an important skill

for every React developer.