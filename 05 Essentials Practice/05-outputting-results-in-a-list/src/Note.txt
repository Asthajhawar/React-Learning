Transcript
So now that we got correct results,

instead of outputting them in a console,

I wanna output them in a table.

And therefore, here in this results component,

we should output the table element,

which of course also is built into HTML

and therefore, also into JSX.

Now, this table should receive an idea of result

because that is what we'll be looking for in the CSS file.

And in that table, I'll start by adding a table head,

which has one table row

where I'll set up the different titles

for the different columns of that table.

And in that table, I want to have a year column,

which simply tells us for which year

a respective result is.

We'll have the investment value column,

we'll have never column which outputs the interest

for a given year.

So the interest earned in a given year.

Another column where I wanna output the total interest

earned across all years.

And last but not least, another column

where I wanna output the invested capital across all years.

So these are my five columns,

which I want to have in that table.

And therefore, now below that table head,

we want to have a table body,

which includes the actual rows with the actual data

that should be output.

And of course, here in this table, we'll have multiple rows

and therefore, we'll output these rows dynamically

as a list based on this results data array

as you learned it earlier in the course.

So here in the table body,

we should output our dynamic value

and we wanna output our results data.

So this array here,

which we're deriving with calculate investment results.

And therefore, here, as you learned it,

we can use this map method

to turn this data array into an array full of JSX elements

that can then be rendered on the screen by React.

And here we'll get the data for every year

in this function which we pass to map,

which will be executed for every entry

in this results data array.

And then here, I wanna return a table row element

because in that table row element,

we can then define the values for the different columns

with help of the table data element, the td tag.

Now since we're in the list,

this table row should receive a key,

and here I'll simply use the year property as an identifier.

Because as you can see in the developer tools,

the year here has a different value for every year.

So it's a perfect identifier.

And then we need five table data elements in there

because we got five columns set up here in the table head.

Now in the first column,

so in the first table data element here,

we wanna output the year identifier.

So we simply wanna output yearData.year.

In the second element here,

we wanna output the investment value.

So the current value of our investment

at the end of this year.

And as you can see in the data,

we got this here in this value end of year property.

Therefore, hear, we can output year data

value end of year.

Though if we would do this,

you would see it here.

So outputting works as you can see

but it doesn't look super pretty,

especially in the later years.

This is really not that pretty.

But that's why I also created a formatter object here

in the investment.js file,

which can be used to format these numbers

and make them prettier.

Therefore, in results JSX,

we should also import this formatter

from this investment.js file here.

And you can then use this formatter down here

to wrap the data that should be formatted

with the format method like this.

So, calling formatter format

and passing the value that should be formatted to it

will make sure that the output looks nicer like this.

So that's looking good, but we're of course not done yet.

Instead, as a next field here,

I wanna output the interest earned in a given year.

And we can also see that in the raw data.

It's this interest property here.

So, back here in our code,

we wanna output yearData.interest here,

but we also wanna format this,

hence I'll also wrap this with the format method

so that we output the formatted interest.

Now in the next column, I now wanna output

the total interest earned across all years up to this point.

And of course, that's not something

we're storing in a separate property here,

but it is a value we can calculate

from these other properties

because the total interest earned in year three, let's say

is simply the value at the end of the year

minus the annual investment in this year,

and the annual investment in earlier years.

So in the end, simply the annual investment times the year

and minus the initial investment.

So if we deduct the initial investment

and all annual investments,

we are left with the total interest gained across all years.

And therefore, here,

inside of this function I'm passing to map,

I am calculating that total interest value

by using year data value end of year

and deducting year data annual investment

times year data year

because we need to deduct the annual investment

for every year.

But we also need to deduct the initial investment

and we're not storing this year in our objects.

But of course, we can easily calculate

the initial investment

based on the results from the first year.

Because in the first year,

if we deducted the interest and the annual investment

from the value at the end of the year,

we are left with the initial investment.

And therefore, of course, back in the results component,

here at the beginning maybe

we can derive our initial investment

by digging into the results data array

and by then accessing the first value.

So the result for the first year.

And here I want to get my value at the end of the year

and then deduct from that same year

my interest earned

and also, of course, for that same year,

my annual investment.

So that with that, I'm deriving my initial investment.

And therefore, now we get the initial investment as well

and we can also deduct that year

to calculate the total interest earned in a given year.

So I'm deducting the initial investment here.

And with that, we can now output the formatted

total interest here in the fourth column.

And if we save that,

we therefore see the total interest output here.

Now, last but not least,

we also need to output the total capital invested

in a given year.

And that's kind of the opposite of the total interest.

So we can calculate the total amount invested

by simply using our value at the end of the year

and deducting the total interest

because that difference now of course,

will give us the total amount invested.

So therefore,

we can then also output this in a formatted way

by wrapping it with format our total amount invested.

If we save that,

we can see our invested capital at the end of a given year

here in this last column.

And with that, this results table is finished

and this entire app is finished,

at least the first version of this app is finished.

Because there still are some potential problems in that app

that should be fixed.